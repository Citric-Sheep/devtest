"""Remove elevator_status_state Column

Revision ID: 2b3cd2c2047d
Revises: 0b35da132e84
Create Date: 2023-08-28 07:49:21.162787

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2b3cd2c2047d'
down_revision: Union[str, None] = '0b35da132e84'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'catalog_elevator_states', ['catalog_elevator_states_id'])
    op.create_unique_constraint(None, 'catalog_order_categories', ['catalog_order_categories_id'])
    op.create_unique_constraint(None, 'catalog_order_movements', ['catalog_order_movements_id'])
    op.create_unique_constraint(None, 'catalog_order_status', ['catalog_order_status_id'])
    op.create_unique_constraint(None, 'catalog_order_types', ['catalog_order_types_id'])
    op.create_unique_constraint(None, 'elevator_orders', ['elevator_orders_id'])
    op.add_column('elevator_status', sa.Column('elevator_status_movement', sa.Integer(), nullable=False))
    op.create_unique_constraint(None, 'elevator_status', ['elevator_status_id'])
    op.drop_constraint('elevator_status_elevator_status_current_fkey', 'elevator_status', type_='foreignkey')
    op.create_foreign_key(None, 'elevator_status', 'catalog_order_movements', ['elevator_status_movement'], ['catalog_order_movements_code'])
    op.drop_column('elevator_status', 'elevator_status_current')
    op.drop_column('elevator_status', 'elevator_status_state')
    op.create_unique_constraint(None, 'elevators', ['elevator_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'elevators', type_='unique')
    op.add_column('elevator_status', sa.Column('elevator_status_state', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('elevator_status', sa.Column('elevator_status_current', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'elevator_status', type_='foreignkey')
    op.create_foreign_key('elevator_status_elevator_status_current_fkey', 'elevator_status', 'catalog_order_movements', ['elevator_status_current'], ['catalog_order_movements_code'])
    op.drop_constraint(None, 'elevator_status', type_='unique')
    op.drop_column('elevator_status', 'elevator_status_movement')
    op.drop_constraint(None, 'elevator_orders', type_='unique')
    op.drop_constraint(None, 'catalog_order_types', type_='unique')
    op.drop_constraint(None, 'catalog_order_status', type_='unique')
    op.drop_constraint(None, 'catalog_order_movements', type_='unique')
    op.drop_constraint(None, 'catalog_order_categories', type_='unique')
    op.drop_constraint(None, 'catalog_elevator_states', type_='unique')
    # ### end Alembic commands ###
